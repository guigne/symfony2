parameters:
#    raf_site.example.class: Raf\SiteBundle\Example

services:
#    raf_site.example:
#        class: %raf_site.example.class%
#        arguments: [@service_id, "plain_value", %parameter%]

    raf_site.antispam:
        class: Raf\SiteBundle\Antispam\RafAntispam
        arguments: [@mailer, %locale%, 3]

    raf_site.validator.antiflood:                            # Le nom du service
        class: Raf\SiteBundle\Validator\AntiFloodValidator   # La classe du service, ici notre validateur déjà créé
        arguments: [@request, @doctrine.orm.entity_manager]  # Les données qu'on injecte au service : la requête et l'EntityManager
        scope: request                                       # Comme on injecte la requête, on doit préciser ce scope
        tags:
            - { name: validator.constraint_validator, alias: raf_site_antiflood }  # C'est avec l'alias qu'on retrouvera le service
